{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/screen1/screen1.component.html","webpack:///./src/app/screen1/screen1.component.scss","webpack:///./src/app/screen1/screen1.component.ts","webpack:///./src/app/screen2/screen2.component.html","webpack:///./src/app/screen2/screen2.component.scss","webpack:///./src/app/screen2/screen2.component.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div>\\r\\n    <header>\\r\\n      Header\\r\\n    </header><br>\\r\\n    \\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent { }\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { Screen1Component } from './screen1/screen1.component';\r\nimport { Screen2Component } from './screen2/screen2.component';\r\nimport { AppRoutingModule } from './app.routing';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    Screen1Component,\r\n    Screen2Component\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { Screen1Component } from './screen1/screen1.component';\r\nimport { Screen2Component } from './screen2/screen2.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot([\r\n            { path: '', redirectTo: 'screen1', pathMatch: 'full' },\r\n            { path: 'screen1', component: Screen1Component},\r\n            { path: 'screen2', component: Screen2Component}\r\n        ])\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<form name=\\\"sliderForm\\\" class=\\\"slider-form\\\">\\r\\n  <section class=\\\"float-left text-center\\\">\\r\\n    <label>Select the loading time range</label><br>\\r\\n    <span>(in seconds)</span><br><br>\\r\\n    <select [(ngModel)]=\\\"selectedRange\\\" name=\\\"selectControl\\\" (change) = \\\"changedValue(selectedRange)\\\">\\r\\n      <option [ngValue]=\\\"option\\\" *ngFor=\\\"let option of selectDropdown\\\"> \\r\\n          {{option.startRange}} - {{option.endRange}}\\r\\n      </option>\\r\\n    </select>\\r\\n    <br>\\r\\n  </section>\\r\\n  <section class=\\\"float-right\\\">\\r\\n    <div class=\\\"text-center\\\">\\r\\n    <label>Select a particular loading time.</label></div><br><br>\\r\\n    <div class=\\\"progress-box\\\">\\r\\n      <div class=\\\"progress-bar progress-bar-slider\\\">\\r\\n        <input class=\\\"progress-slider\\\" type=\\\"range\\\" name=\\\"timeControl\\\" min=\\\"{{selectedRange.startRange}}\\\" max=\\\"{{selectedRange.endRange}}\\\" [(ngModel)]=\\\"selectedTime\\\" (change) = \\\"changedTime(selectedTime)\\\">\\r\\n        <div class=\\\"inner\\\" [ngStyle]=\\\"{ width: sliderWidth + '%' || '0%' }\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"range\\\">\\r\\n        <span *ngIf=\\\"sliderWidth!==selectedRange.startRange && sliderWidth !== selectedRange.endRange\\\" [ngStyle]=\\\"{left: timerWidth + '%' || '0%' }\\\">{{selectedTime}} s</span>\\r\\n        <span class=\\\"float-left\\\">{{selectedRange.startRange}}  s</span>\\r\\n        <span class=\\\"float-right\\\">{{selectedRange.endRange}} s</span>\\r\\n      </div>\\r\\n    </div><br><br>\\r\\n    \\r\\n    <label class=\\\"checkbox\\\">\\r\\n      <label class=\\\"switch\\\">\\r\\n        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"enableTimer\\\" name=\\\"checkbox\\\">\\r\\n        <span class=\\\"slider round\\\"></span>\\r\\n      </label>\\r\\n      <b>Enable the loading time as selected on slider</b>\\r\\n    </label>\\r\\n  </section>\\r\\n  <br><br><br><br>\\r\\n  <div class=\\\"button-center\\\">\\r\\n    <button type=\\\"button\\\" (click)=\\\"submit()\\\">Submit</button>\\r\\n  </div>\\r\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjcmVlbjEvc2NyZWVuMS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-screen1',\r\n  templateUrl: './screen1.component.html',\r\n  styleUrls: ['./screen1.component.scss']\r\n})\r\nexport class Screen1Component implements OnInit {\r\n\r\n  selectedRange: any;\r\n  selectedTime: number;\r\n  sliderWidth: number;\r\n  timerWidth: number;\r\n  enableTimer: boolean;\r\n  selectDropdown: any = [\r\n    {\r\n        'value': 1,\r\n        'startRange': 0,\r\n        'endRange': 100\r\n    },\r\n    {\r\n        'value': 2,\r\n        'startRange': 100,\r\n        'endRange': 200\r\n    },\r\n    {\r\n        'value': 3,\r\n        'startRange': 200,\r\n        'endRange': 500\r\n    },\r\n    {\r\n        'value': 4,\r\n        'startRange': 500,\r\n        'endRange': 1000\r\n    },\r\n    {\r\n        'value': 5,\r\n        'startRange': 1000,\r\n        'endRange': 1500\r\n    }\r\n  ];\r\n  constructor(private router: Router) {}\r\n  ngOnInit() {\r\n    this.selectedRange = this.selectDropdown[0];\r\n    this.changedValue(this.selectedRange);\r\n  }\r\n\r\n  changedValue(value) {\r\n    this.selectedTime = ((value.endRange - value.startRange) / 2) + value.startRange;\r\n    this.changedTime(this.selectedTime);\r\n  }\r\n\r\n  changedTime(value) {\r\n    const range = this.selectedRange.endRange - this.selectedRange.startRange;\r\n    const s = value - this.selectedRange.startRange;\r\n    this.timerWidth = (s / range) * 100;\r\n    this.sliderWidth = this.timerWidth + (this.timerWidth > 9 ? 1.5 : 1); // for aligning the timerWidth, adding some more width\r\n  }\r\n\r\n  navigateToScreen2() {\r\n    this.router.navigate(['/screen2']);\r\n  }\r\n\r\n  submit() {\r\n    if (!this.enableTimer) {\r\n      this.enableTimer = false;\r\n      this.router.navigate(['/screen2']);\r\n    } else {\r\n      setTimeout(this.navigateToScreen2.bind(this), this.selectedTime * 1000);\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<div>\\r\\n  <h3 class=\\\"text-center\\\">\\r\\n    Congratulations !!!!!\\r\\n    <br><br>\\r\\n    <b>Night</b>&nbsp;<span>is</span>&nbsp;<b>Dark</b>&nbsp;<span>and</span>&nbsp;<b>Full</b>&nbsp;<span>of</span>&nbsp;<b>Terrors</b>\\r\\n  </h3>\\r\\n  <div class=\\\"button-center\\\">\\r\\n    <button type=\\\"button\\\" [routerLink]=\\\"['/screen1']\\\"  >Simulate Again</button>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjcmVlbjIvc2NyZWVuMi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-screen2',\r\n  templateUrl: './screen2.component.html',\r\n  styleUrls: ['./screen2.component.scss']\r\n})\r\nexport class Screen2Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}